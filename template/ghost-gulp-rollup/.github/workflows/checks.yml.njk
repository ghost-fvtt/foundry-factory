name: Checks

on:
  - push
  - pull_request

env:
  node_version: 16

jobs:{% if useLinting %}
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: {% raw %}${{ env.node_version }}{% endraw %}
{% if packageManager == "npm" %}{% raw %}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-{% endraw %}
{% else %}{% raw %}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: .yarn/cache
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-{% endraw %}
{% endif %}
      - name: Install dependencies
        run: {% if packageManager == "npm" %}npm ci --cache .npm --prefer-offline{% else %}yarn install --immutable{% endif %}

      - name: Lint
        run: {% if packageManager == "npm" %}npm run{% else %}yarn{% endif %} lint
{% endif %}{% if useTesting %}
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: {% raw %}${{ env.node_version }}{% endraw %}
{% if packageManager == "npm" %}{% raw %}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-{% endraw %}
{% else %}{% raw %}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: .yarn/cache
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-{% endraw %}
{% endif %}
      - name: Install dependencies
        run: {% if packageManager == "npm" %}npm ci --cache .npm --prefer-offline{% else %}yarn install --immutable{% endif %}

      - name: Test
        run: {% if packageManager == "npm" %}npm run{% else %}yarn{% endif %} test:ci
{% endif %}
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: {% raw %}${{ env.node_version }}{% endraw %}
{% if packageManager == "npm" %}{% raw %}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: .npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-{% endraw %}
{% else %}{% raw %}
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: .yarn/cache
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-{% endraw %}
{% endif %}
      - name: Install dependencies
        run: {% if packageManager == "npm" %}npm ci --cache .npm --prefer-offline{% else %}yarn install --immutable{% endif %}

      - name: Build
        run: {% if packageManager == "npm" %}npm run{% else %}yarn{% endif %} build
